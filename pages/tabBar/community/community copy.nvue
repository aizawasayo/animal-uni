<template>
  <view class="tabs">
    <scroll-view class="tab-bar scroll-h" :scroll-x="true" :show-scrollbar="false" :scroll-into-view="scrollInto">
      <view v-for="(tab,index) in tabBars" :key="tab.id" class="uni-tab-item" :id="tab.id" :data-current="index"
        @click="ontabtap">
        <text class="uni-tab-item-title" :class="tabIndex==index ? 'uni-tab-item-title-active' : ''">{{tab.name}}</text>
      </view>
    </scroll-view>
    <view class="line-h"></view>
    <swiper :current="tabIndex" class="swiper-box" style="flex: 1;" :duration="300" @change="ontabchange">
      <swiper-item>
        <board ref="board" :query="query"></board>
      </swiper-item>
      <swiper-item>
        <turnip ref="turnip" :query="query"></turnip>
      </swiper-item>
      <swiper-item>
        <trade ref="trade" :query="query"></trade>
      </swiper-item>
    </swiper>
  </view>
  <uni-fab ref="fab" :pattern="pattern" horizontal="right" vertical="bottom" :popMenu="false" @fabClick="fabClick" />
</template>

<script>
  import { mapGetters } from 'vuex'
  import useLogin from '@/composables/useLogin'
  import Board from '@/pages/community/board/Board.vue'
  import Turnip from '@/pages/community/turnip/Turnip.vue'
  import Trade from '@/pages/community/trade/Trade.vue'

  export default {
    components: {
      Board,
      Turnip,
      Trade
    },
    inject: ['utils'],
    data() {
      return {
        query: '',
        tabIndex: 0,
        tabBars: [
          { name: '森友墙', id: 'board' },
          { name: '菜市场', id: 'turnip' },
          { name: '交易区', id: 'trade' },
        ],
        scrollInto: "",
        pattern: {
          buttonColor: '#3FB984'
        },
      };
    },
    computed: {
      ...mapGetters(['userId'])
    },
    methods: {
      ontabtap(e) {
        let index = e.target.dataset.current || e.currentTarget.dataset.current;
        this.switchTab(index);
      },
      ontabchange(e) {
        let index = e.target.current || e.detail.current;
        this.switchTab(index);
      },
      switchTab(index) {
        if (this.tabIndex === index) {
          return;
        }
        this.tabIndex = index;
        this.scrollInto = this.tabBars[index].id;

        // 释放 tabId
        // if (this.cacheTab.length > MAX_CACHE_PAGE) {
        //   let cacheIndex = this.cacheTab[0];
        //   this.clearTabData(cacheIndex);
        //   this.cacheTab.splice(0, 1);
        //   //console.log("remove cache index:: " + cacheIndex);
        // }
      },
      fabClick() {
        if (this.userId) {
          const type = this.tabBars[this.tabIndex].id
          this.utils.goPage(`../../community/${type}/add-${type}/add-${type}`)
        } else {
          useLogin().goLogin('发布信息需要先登录，确定前往登录页面')
        }
      }
    },
    mounted() {
      this.$refs.board.$refs.scrollList.changeScrollHeight()
      this.$refs.turnip.$refs.scrollList.changeScrollHeight()
      this.$refs.trade.$refs.scrollList.changeScrollHeight()
    }
  }
</script>

<style lang="scss">
  @import '@/common/uni-nvue.css';

  /* #ifndef APP-PLUS */
  page {
    width: 100%;
    min-height: 100%;
    display: flex;
  }

  /* #endif */
</style>
